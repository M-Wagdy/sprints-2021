
USonic_Car.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000009a2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000a  00800060  000009a2  00000a36  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000007  0080006a  0080006a  00000a40  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000a40  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000a70  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  00000aac  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c54  00000000  00000000  00000b34  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000723  00000000  00000000  00001788  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000073f  00000000  00000000  00001eab  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000128  00000000  00000000  000025ec  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000500  00000000  00000000  00002714  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000057c  00000000  00000000  00002c14  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00003190  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 31 00 	jmp	0x62	; 0x62 <__ctors_end>
   4:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
   8:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
   c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  10:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  14:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  18:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  1c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  20:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  24:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  28:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  2c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  30:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  34:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  38:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  3c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  40:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  44:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  48:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  4c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  50:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  54:	c9 00       	.word	0x00c9	; ????
  56:	d3 00       	.word	0x00d3	; ????
  58:	dd 00       	.word	0x00dd	; ????
  5a:	e7 00       	.word	0x00e7	; ????
  5c:	f1 00       	.word	0x00f1	; ????
  5e:	fb 00       	.word	0x00fb	; ????
  60:	05 01       	movw	r0, r10

00000062 <__ctors_end>:
  62:	11 24       	eor	r1, r1
  64:	1f be       	out	0x3f, r1	; 63
  66:	cf e5       	ldi	r28, 0x5F	; 95
  68:	d8 e0       	ldi	r29, 0x08	; 8
  6a:	de bf       	out	0x3e, r29	; 62
  6c:	cd bf       	out	0x3d, r28	; 61

0000006e <__do_copy_data>:
  6e:	10 e0       	ldi	r17, 0x00	; 0
  70:	a0 e6       	ldi	r26, 0x60	; 96
  72:	b0 e0       	ldi	r27, 0x00	; 0
  74:	e2 ea       	ldi	r30, 0xA2	; 162
  76:	f9 e0       	ldi	r31, 0x09	; 9
  78:	02 c0       	rjmp	.+4      	; 0x7e <__do_copy_data+0x10>
  7a:	05 90       	lpm	r0, Z+
  7c:	0d 92       	st	X+, r0
  7e:	aa 36       	cpi	r26, 0x6A	; 106
  80:	b1 07       	cpc	r27, r17
  82:	d9 f7       	brne	.-10     	; 0x7a <__do_copy_data+0xc>

00000084 <__do_clear_bss>:
  84:	20 e0       	ldi	r18, 0x00	; 0
  86:	aa e6       	ldi	r26, 0x6A	; 106
  88:	b0 e0       	ldi	r27, 0x00	; 0
  8a:	01 c0       	rjmp	.+2      	; 0x8e <.do_clear_bss_start>

0000008c <.do_clear_bss_loop>:
  8c:	1d 92       	st	X+, r1

0000008e <.do_clear_bss_start>:
  8e:	a1 37       	cpi	r26, 0x71	; 113
  90:	b2 07       	cpc	r27, r18
  92:	e1 f7       	brne	.-8      	; 0x8c <.do_clear_bss_loop>
  94:	0e 94 50 00 	call	0xa0	; 0xa0 <main>
  98:	0c 94 cf 04 	jmp	0x99e	; 0x99e <_exit>

0000009c <__bad_interrupt>:
  9c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a0 <main>:
#define PORTA_DATA      (*((volatile uint8_t *) (0x3B)))
#define PORTA_DIR       (*((volatile uint8_t *) (0x3A)))

int main(void)
{
   PORTA_DIR |= 0x01;
  a0:	8a b3       	in	r24, 0x1a	; 26
  a2:	81 60       	ori	r24, 0x01	; 1
  a4:	8a bb       	out	0x1a, r24	; 26
   TIM_Init(TIMER_0);
  a6:	80 e0       	ldi	r24, 0x00	; 0
  a8:	0e 94 11 01 	call	0x222	; 0x222 <TIM_Init>
   
   /* Replace with your application code */
   while (1) 
   {
      while(TIM_DelayMs(TIMER_0, 1000) == TIMER_E_PENDING);
  ac:	48 ee       	ldi	r20, 0xE8	; 232
  ae:	53 e0       	ldi	r21, 0x03	; 3
  b0:	60 e0       	ldi	r22, 0x00	; 0
  b2:	70 e0       	ldi	r23, 0x00	; 0
  b4:	80 e0       	ldi	r24, 0x00	; 0
  b6:	0e 94 16 02 	call	0x42c	; 0x42c <TIM_DelayMs>
  ba:	8d 3f       	cpi	r24, 0xFD	; 253
  bc:	b9 f3       	breq	.-18     	; 0xac <main+0xc>
      PORTA_DATA ^= 0x01;
  be:	9b b3       	in	r25, 0x1b	; 27
  c0:	81 e0       	ldi	r24, 0x01	; 1
  c2:	89 27       	eor	r24, r25
  c4:	8b bb       	out	0x1b, r24	; 27
   }
  c6:	f2 cf       	rjmp	.-28     	; 0xac <main+0xc>

000000c8 <GetFreqPrescaleRatio>:
         }
         
         return TIMER_E_PENDING;
      }         
   }            
}
  c8:	82 30       	cpi	r24, 0x02	; 2
  ca:	08 f0       	brcs	.+2      	; 0xce <GetFreqPrescaleRatio+0x6>
  cc:	49 c0       	rjmp	.+146    	; 0x160 <GetFreqPrescaleRatio+0x98>
  ce:	90 e0       	ldi	r25, 0x00	; 0
  d0:	fc 01       	movw	r30, r24
  d2:	ee 0f       	add	r30, r30
  d4:	ff 1f       	adc	r31, r31
  d6:	8e 0f       	add	r24, r30
  d8:	9f 1f       	adc	r25, r31
  da:	fc 01       	movw	r30, r24
  dc:	e0 5a       	subi	r30, 0xA0	; 160
  de:	ff 4f       	sbci	r31, 0xFF	; 255
  e0:	82 81       	ldd	r24, Z+2	; 0x02
  e2:	83 30       	cpi	r24, 0x03	; 3
  e4:	f9 f0       	breq	.+62     	; 0x124 <GetFreqPrescaleRatio+0x5c>
  e6:	28 f4       	brcc	.+10     	; 0xf2 <GetFreqPrescaleRatio+0x2a>
  e8:	81 30       	cpi	r24, 0x01	; 1
  ea:	41 f0       	breq	.+16     	; 0xfc <GetFreqPrescaleRatio+0x34>
  ec:	82 30       	cpi	r24, 0x02	; 2
  ee:	81 f0       	breq	.+32     	; 0x110 <GetFreqPrescaleRatio+0x48>
  f0:	96 c0       	rjmp	.+300    	; 0x21e <GetFreqPrescaleRatio+0x156>
  f2:	84 30       	cpi	r24, 0x04	; 4
  f4:	09 f1       	breq	.+66     	; 0x138 <GetFreqPrescaleRatio+0x70>
  f6:	85 30       	cpi	r24, 0x05	; 5
  f8:	49 f1       	breq	.+82     	; 0x14c <GetFreqPrescaleRatio+0x84>
  fa:	91 c0       	rjmp	.+290    	; 0x21e <GetFreqPrescaleRatio+0x156>
  fc:	80 e0       	ldi	r24, 0x00	; 0
  fe:	90 e0       	ldi	r25, 0x00	; 0
 100:	a0 e0       	ldi	r26, 0x00	; 0
 102:	be e3       	ldi	r27, 0x3E	; 62
 104:	fb 01       	movw	r30, r22
 106:	80 83       	st	Z, r24
 108:	91 83       	std	Z+1, r25	; 0x01
 10a:	a2 83       	std	Z+2, r26	; 0x02
 10c:	b3 83       	std	Z+3, r27	; 0x03
 10e:	86 c0       	rjmp	.+268    	; 0x21c <GetFreqPrescaleRatio+0x154>
 110:	80 e0       	ldi	r24, 0x00	; 0
 112:	90 e0       	ldi	r25, 0x00	; 0
 114:	a0 e8       	ldi	r26, 0x80	; 128
 116:	bf e3       	ldi	r27, 0x3F	; 63
 118:	fb 01       	movw	r30, r22
 11a:	80 83       	st	Z, r24
 11c:	91 83       	std	Z+1, r25	; 0x01
 11e:	a2 83       	std	Z+2, r26	; 0x02
 120:	b3 83       	std	Z+3, r27	; 0x03
 122:	7c c0       	rjmp	.+248    	; 0x21c <GetFreqPrescaleRatio+0x154>
 124:	80 e0       	ldi	r24, 0x00	; 0
 126:	90 e0       	ldi	r25, 0x00	; 0
 128:	a0 e0       	ldi	r26, 0x00	; 0
 12a:	b1 e4       	ldi	r27, 0x41	; 65
 12c:	fb 01       	movw	r30, r22
 12e:	80 83       	st	Z, r24
 130:	91 83       	std	Z+1, r25	; 0x01
 132:	a2 83       	std	Z+2, r26	; 0x02
 134:	b3 83       	std	Z+3, r27	; 0x03
 136:	72 c0       	rjmp	.+228    	; 0x21c <GetFreqPrescaleRatio+0x154>
 138:	80 e0       	ldi	r24, 0x00	; 0
 13a:	90 e0       	ldi	r25, 0x00	; 0
 13c:	a0 e0       	ldi	r26, 0x00	; 0
 13e:	b2 e4       	ldi	r27, 0x42	; 66
 140:	fb 01       	movw	r30, r22
 142:	80 83       	st	Z, r24
 144:	91 83       	std	Z+1, r25	; 0x01
 146:	a2 83       	std	Z+2, r26	; 0x02
 148:	b3 83       	std	Z+3, r27	; 0x03
 14a:	68 c0       	rjmp	.+208    	; 0x21c <GetFreqPrescaleRatio+0x154>
 14c:	80 e0       	ldi	r24, 0x00	; 0
 14e:	90 e0       	ldi	r25, 0x00	; 0
 150:	a0 e0       	ldi	r26, 0x00	; 0
 152:	b3 e4       	ldi	r27, 0x43	; 67
 154:	fb 01       	movw	r30, r22
 156:	80 83       	st	Z, r24
 158:	91 83       	std	Z+1, r25	; 0x01
 15a:	a2 83       	std	Z+2, r26	; 0x02
 15c:	b3 83       	std	Z+3, r27	; 0x03
 15e:	5e c0       	rjmp	.+188    	; 0x21c <GetFreqPrescaleRatio+0x154>
 160:	82 30       	cpi	r24, 0x02	; 2
 162:	09 f0       	breq	.+2      	; 0x166 <GetFreqPrescaleRatio+0x9e>
 164:	5b c0       	rjmp	.+182    	; 0x21c <GetFreqPrescaleRatio+0x154>
 166:	90 e0       	ldi	r25, 0x00	; 0
 168:	fc 01       	movw	r30, r24
 16a:	ee 0f       	add	r30, r30
 16c:	ff 1f       	adc	r31, r31
 16e:	8e 0f       	add	r24, r30
 170:	9f 1f       	adc	r25, r31
 172:	fc 01       	movw	r30, r24
 174:	e0 5a       	subi	r30, 0xA0	; 160
 176:	ff 4f       	sbci	r31, 0xFF	; 255
 178:	e2 81       	ldd	r30, Z+2	; 0x02
 17a:	8e 2f       	mov	r24, r30
 17c:	90 e0       	ldi	r25, 0x00	; 0
 17e:	fc 01       	movw	r30, r24
 180:	31 97       	sbiw	r30, 0x01	; 1
 182:	e7 30       	cpi	r30, 0x07	; 7
 184:	f1 05       	cpc	r31, r1
 186:	08 f0       	brcs	.+2      	; 0x18a <GetFreqPrescaleRatio+0xc2>
 188:	4a c0       	rjmp	.+148    	; 0x21e <GetFreqPrescaleRatio+0x156>
 18a:	e6 5d       	subi	r30, 0xD6	; 214
 18c:	ff 4f       	sbci	r31, 0xFF	; 255
 18e:	0c 94 af 04 	jmp	0x95e	; 0x95e <__tablejump2__>
 192:	80 e0       	ldi	r24, 0x00	; 0
 194:	90 e0       	ldi	r25, 0x00	; 0
 196:	a0 e0       	ldi	r26, 0x00	; 0
 198:	be e3       	ldi	r27, 0x3E	; 62
 19a:	fb 01       	movw	r30, r22
 19c:	80 83       	st	Z, r24
 19e:	91 83       	std	Z+1, r25	; 0x01
 1a0:	a2 83       	std	Z+2, r26	; 0x02
 1a2:	b3 83       	std	Z+3, r27	; 0x03
 1a4:	3b c0       	rjmp	.+118    	; 0x21c <GetFreqPrescaleRatio+0x154>
 1a6:	80 e0       	ldi	r24, 0x00	; 0
 1a8:	90 e0       	ldi	r25, 0x00	; 0
 1aa:	a0 e8       	ldi	r26, 0x80	; 128
 1ac:	bf e3       	ldi	r27, 0x3F	; 63
 1ae:	fb 01       	movw	r30, r22
 1b0:	80 83       	st	Z, r24
 1b2:	91 83       	std	Z+1, r25	; 0x01
 1b4:	a2 83       	std	Z+2, r26	; 0x02
 1b6:	b3 83       	std	Z+3, r27	; 0x03
 1b8:	31 c0       	rjmp	.+98     	; 0x21c <GetFreqPrescaleRatio+0x154>
 1ba:	80 e0       	ldi	r24, 0x00	; 0
 1bc:	90 e0       	ldi	r25, 0x00	; 0
 1be:	a0 e8       	ldi	r26, 0x80	; 128
 1c0:	b0 e4       	ldi	r27, 0x40	; 64
 1c2:	fb 01       	movw	r30, r22
 1c4:	80 83       	st	Z, r24
 1c6:	91 83       	std	Z+1, r25	; 0x01
 1c8:	a2 83       	std	Z+2, r26	; 0x02
 1ca:	b3 83       	std	Z+3, r27	; 0x03
 1cc:	27 c0       	rjmp	.+78     	; 0x21c <GetFreqPrescaleRatio+0x154>
 1ce:	80 e0       	ldi	r24, 0x00	; 0
 1d0:	90 e0       	ldi	r25, 0x00	; 0
 1d2:	a0 e0       	ldi	r26, 0x00	; 0
 1d4:	b1 e4       	ldi	r27, 0x41	; 65
 1d6:	fb 01       	movw	r30, r22
 1d8:	80 83       	st	Z, r24
 1da:	91 83       	std	Z+1, r25	; 0x01
 1dc:	a2 83       	std	Z+2, r26	; 0x02
 1de:	b3 83       	std	Z+3, r27	; 0x03
 1e0:	1d c0       	rjmp	.+58     	; 0x21c <GetFreqPrescaleRatio+0x154>
 1e2:	80 e0       	ldi	r24, 0x00	; 0
 1e4:	90 e0       	ldi	r25, 0x00	; 0
 1e6:	a0 e8       	ldi	r26, 0x80	; 128
 1e8:	b1 e4       	ldi	r27, 0x41	; 65
 1ea:	fb 01       	movw	r30, r22
 1ec:	80 83       	st	Z, r24
 1ee:	91 83       	std	Z+1, r25	; 0x01
 1f0:	a2 83       	std	Z+2, r26	; 0x02
 1f2:	b3 83       	std	Z+3, r27	; 0x03
 1f4:	13 c0       	rjmp	.+38     	; 0x21c <GetFreqPrescaleRatio+0x154>
 1f6:	80 e0       	ldi	r24, 0x00	; 0
 1f8:	90 e0       	ldi	r25, 0x00	; 0
 1fa:	a0 e0       	ldi	r26, 0x00	; 0
 1fc:	b2 e4       	ldi	r27, 0x42	; 66
 1fe:	fb 01       	movw	r30, r22
 200:	80 83       	st	Z, r24
 202:	91 83       	std	Z+1, r25	; 0x01
 204:	a2 83       	std	Z+2, r26	; 0x02
 206:	b3 83       	std	Z+3, r27	; 0x03
 208:	09 c0       	rjmp	.+18     	; 0x21c <GetFreqPrescaleRatio+0x154>
 20a:	80 e0       	ldi	r24, 0x00	; 0
 20c:	90 e0       	ldi	r25, 0x00	; 0
 20e:	a0 e0       	ldi	r26, 0x00	; 0
 210:	b3 e4       	ldi	r27, 0x43	; 67
 212:	fb 01       	movw	r30, r22
 214:	80 83       	st	Z, r24
 216:	91 83       	std	Z+1, r25	; 0x01
 218:	a2 83       	std	Z+2, r26	; 0x02
 21a:	b3 83       	std	Z+3, r27	; 0x03
 21c:	08 95       	ret
 21e:	8c ef       	ldi	r24, 0xFC	; 252
 220:	08 95       	ret

00000222 <TIM_Init>:
 222:	81 30       	cpi	r24, 0x01	; 1
 224:	c1 f0       	breq	.+48     	; 0x256 <TIM_Init+0x34>
 226:	18 f0       	brcs	.+6      	; 0x22e <TIM_Init+0xc>
 228:	82 30       	cpi	r24, 0x02	; 2
 22a:	89 f1       	breq	.+98     	; 0x28e <TIM_Init+0x6c>
 22c:	48 c0       	rjmp	.+144    	; 0x2be <TIM_Init+0x9c>
 22e:	90 e0       	ldi	r25, 0x00	; 0
 230:	fc 01       	movw	r30, r24
 232:	ee 0f       	add	r30, r30
 234:	ff 1f       	adc	r31, r31
 236:	8e 0f       	add	r24, r30
 238:	9f 1f       	adc	r25, r31
 23a:	fc 01       	movw	r30, r24
 23c:	e0 5a       	subi	r30, 0xA0	; 160
 23e:	ff 4f       	sbci	r31, 0xFF	; 255
 240:	80 81       	ld	r24, Z
 242:	83 bf       	out	0x33, r24	; 51
 244:	89 b7       	in	r24, 0x39	; 57
 246:	8c 7f       	andi	r24, 0xFC	; 252
 248:	89 bf       	out	0x39, r24	; 57
 24a:	99 b7       	in	r25, 0x39	; 57
 24c:	81 81       	ldd	r24, Z+1	; 0x01
 24e:	89 2b       	or	r24, r25
 250:	89 bf       	out	0x39, r24	; 57
 252:	80 e0       	ldi	r24, 0x00	; 0
 254:	08 95       	ret
 256:	90 e0       	ldi	r25, 0x00	; 0
 258:	fc 01       	movw	r30, r24
 25a:	ee 0f       	add	r30, r30
 25c:	ff 1f       	adc	r31, r31
 25e:	8e 0f       	add	r24, r30
 260:	9f 1f       	adc	r25, r31
 262:	fc 01       	movw	r30, r24
 264:	e0 5a       	subi	r30, 0xA0	; 160
 266:	ff 4f       	sbci	r31, 0xFF	; 255
 268:	80 81       	ld	r24, Z
 26a:	8e bd       	out	0x2e, r24	; 46
 26c:	89 b7       	in	r24, 0x39	; 57
 26e:	87 7e       	andi	r24, 0xE7	; 231
 270:	89 bf       	out	0x39, r24	; 57
 272:	29 b7       	in	r18, 0x39	; 57
 274:	91 81       	ldd	r25, Z+1	; 0x01
 276:	89 2f       	mov	r24, r25
 278:	90 e0       	ldi	r25, 0x00	; 0
 27a:	88 0f       	add	r24, r24
 27c:	99 1f       	adc	r25, r25
 27e:	88 0f       	add	r24, r24
 280:	99 1f       	adc	r25, r25
 282:	88 0f       	add	r24, r24
 284:	99 1f       	adc	r25, r25
 286:	82 2b       	or	r24, r18
 288:	89 bf       	out	0x39, r24	; 57
 28a:	80 e0       	ldi	r24, 0x00	; 0
 28c:	08 95       	ret
 28e:	90 e0       	ldi	r25, 0x00	; 0
 290:	fc 01       	movw	r30, r24
 292:	ee 0f       	add	r30, r30
 294:	ff 1f       	adc	r31, r31
 296:	8e 0f       	add	r24, r30
 298:	9f 1f       	adc	r25, r31
 29a:	fc 01       	movw	r30, r24
 29c:	e0 5a       	subi	r30, 0xA0	; 160
 29e:	ff 4f       	sbci	r31, 0xFF	; 255
 2a0:	80 81       	ld	r24, Z
 2a2:	85 bd       	out	0x25, r24	; 37
 2a4:	89 b7       	in	r24, 0x39	; 57
 2a6:	8f 73       	andi	r24, 0x3F	; 63
 2a8:	89 bf       	out	0x39, r24	; 57
 2aa:	29 b7       	in	r18, 0x39	; 57
 2ac:	91 81       	ldd	r25, Z+1	; 0x01
 2ae:	30 e4       	ldi	r19, 0x40	; 64
 2b0:	93 9f       	mul	r25, r19
 2b2:	c0 01       	movw	r24, r0
 2b4:	11 24       	eor	r1, r1
 2b6:	82 2b       	or	r24, r18
 2b8:	89 bf       	out	0x39, r24	; 57
 2ba:	80 e0       	ldi	r24, 0x00	; 0
 2bc:	08 95       	ret
 2be:	8e ef       	ldi	r24, 0xFE	; 254
 2c0:	08 95       	ret

000002c2 <TIM_Start>:
 2c2:	81 30       	cpi	r24, 0x01	; 1
 2c4:	71 f0       	breq	.+28     	; 0x2e2 <TIM_Start+0x20>
 2c6:	18 f0       	brcs	.+6      	; 0x2ce <TIM_Start+0xc>
 2c8:	82 30       	cpi	r24, 0x02	; 2
 2ca:	31 f0       	breq	.+12     	; 0x2d8 <TIM_Start+0x16>
 2cc:	1e c0       	rjmp	.+60     	; 0x30a <TIM_Start+0x48>
 2ce:	e2 e5       	ldi	r30, 0x52	; 82
 2d0:	f0 e0       	ldi	r31, 0x00	; 0
 2d2:	a3 e5       	ldi	r26, 0x53	; 83
 2d4:	b0 e0       	ldi	r27, 0x00	; 0
 2d6:	09 c0       	rjmp	.+18     	; 0x2ea <TIM_Start+0x28>
 2d8:	e4 e4       	ldi	r30, 0x44	; 68
 2da:	f0 e0       	ldi	r31, 0x00	; 0
 2dc:	a5 e4       	ldi	r26, 0x45	; 69
 2de:	b0 e0       	ldi	r27, 0x00	; 0
 2e0:	04 c0       	rjmp	.+8      	; 0x2ea <TIM_Start+0x28>
 2e2:	ec e4       	ldi	r30, 0x4C	; 76
 2e4:	f0 e0       	ldi	r31, 0x00	; 0
 2e6:	ae e4       	ldi	r26, 0x4E	; 78
 2e8:	b0 e0       	ldi	r27, 0x00	; 0
 2ea:	60 83       	st	Z, r22
 2ec:	2c 91       	ld	r18, X
 2ee:	90 e0       	ldi	r25, 0x00	; 0
 2f0:	fc 01       	movw	r30, r24
 2f2:	ee 0f       	add	r30, r30
 2f4:	ff 1f       	adc	r31, r31
 2f6:	8e 0f       	add	r24, r30
 2f8:	9f 1f       	adc	r25, r31
 2fa:	fc 01       	movw	r30, r24
 2fc:	e0 5a       	subi	r30, 0xA0	; 160
 2fe:	ff 4f       	sbci	r31, 0xFF	; 255
 300:	82 81       	ldd	r24, Z+2	; 0x02
 302:	82 2b       	or	r24, r18
 304:	8c 93       	st	X, r24
 306:	80 e0       	ldi	r24, 0x00	; 0
 308:	08 95       	ret
 30a:	8e ef       	ldi	r24, 0xFE	; 254
 30c:	08 95       	ret

0000030e <TIM_GetStatus>:
 30e:	81 30       	cpi	r24, 0x01	; 1
 310:	41 f1       	breq	.+80     	; 0x362 <TIM_GetStatus+0x54>
 312:	20 f0       	brcs	.+8      	; 0x31c <TIM_GetStatus+0xe>
 314:	82 30       	cpi	r24, 0x02	; 2
 316:	09 f4       	brne	.+2      	; 0x31a <TIM_GetStatus+0xc>
 318:	53 c0       	rjmp	.+166    	; 0x3c0 <TIM_GetStatus+0xb2>
 31a:	74 c0       	rjmp	.+232    	; 0x404 <__EEPROM_REGION_LENGTH__+0x4>
 31c:	90 e0       	ldi	r25, 0x00	; 0
 31e:	fc 01       	movw	r30, r24
 320:	ee 0f       	add	r30, r30
 322:	ff 1f       	adc	r31, r31
 324:	8e 0f       	add	r24, r30
 326:	9f 1f       	adc	r25, r31
 328:	fc 01       	movw	r30, r24
 32a:	e0 5a       	subi	r30, 0xA0	; 160
 32c:	ff 4f       	sbci	r31, 0xFF	; 255
 32e:	80 81       	ld	r24, Z
 330:	81 11       	cpse	r24, r1
 332:	09 c0       	rjmp	.+18     	; 0x346 <TIM_GetStatus+0x38>
 334:	08 b6       	in	r0, 0x38	; 56
 336:	00 fe       	sbrs	r0, 0
 338:	67 c0       	rjmp	.+206    	; 0x408 <__EEPROM_REGION_LENGTH__+0x8>
 33a:	fb 01       	movw	r30, r22
 33c:	10 82       	st	Z, r1
 33e:	98 b7       	in	r25, 0x38	; 56
 340:	91 60       	ori	r25, 0x01	; 1
 342:	98 bf       	out	0x38, r25	; 56
 344:	08 95       	ret
 346:	88 30       	cpi	r24, 0x08	; 8
 348:	09 f0       	breq	.+2      	; 0x34c <TIM_GetStatus+0x3e>
 34a:	60 c0       	rjmp	.+192    	; 0x40c <__EEPROM_REGION_LENGTH__+0xc>
 34c:	08 b6       	in	r0, 0x38	; 56
 34e:	01 fe       	sbrs	r0, 1
 350:	5f c0       	rjmp	.+190    	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
 352:	81 e0       	ldi	r24, 0x01	; 1
 354:	fb 01       	movw	r30, r22
 356:	80 83       	st	Z, r24
 358:	88 b7       	in	r24, 0x38	; 56
 35a:	82 60       	ori	r24, 0x02	; 2
 35c:	88 bf       	out	0x38, r24	; 56
 35e:	80 e0       	ldi	r24, 0x00	; 0
 360:	08 95       	ret
 362:	90 e0       	ldi	r25, 0x00	; 0
 364:	fc 01       	movw	r30, r24
 366:	ee 0f       	add	r30, r30
 368:	ff 1f       	adc	r31, r31
 36a:	8e 0f       	add	r24, r30
 36c:	9f 1f       	adc	r25, r31
 36e:	fc 01       	movw	r30, r24
 370:	e0 5a       	subi	r30, 0xA0	; 160
 372:	ff 4f       	sbci	r31, 0xFF	; 255
 374:	80 81       	ld	r24, Z
 376:	81 11       	cpse	r24, r1
 378:	09 c0       	rjmp	.+18     	; 0x38c <TIM_GetStatus+0x7e>
 37a:	08 b6       	in	r0, 0x38	; 56
 37c:	02 fe       	sbrs	r0, 2
 37e:	4a c0       	rjmp	.+148    	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
 380:	fb 01       	movw	r30, r22
 382:	10 82       	st	Z, r1
 384:	98 b7       	in	r25, 0x38	; 56
 386:	94 60       	ori	r25, 0x04	; 4
 388:	98 bf       	out	0x38, r25	; 56
 38a:	08 95       	ret
 38c:	88 30       	cpi	r24, 0x08	; 8
 38e:	09 f0       	breq	.+2      	; 0x392 <TIM_GetStatus+0x84>
 390:	43 c0       	rjmp	.+134    	; 0x418 <__EEPROM_REGION_LENGTH__+0x18>
 392:	98 b7       	in	r25, 0x38	; 56
 394:	89 2f       	mov	r24, r25
 396:	80 71       	andi	r24, 0x10	; 16
 398:	94 ff       	sbrs	r25, 4
 39a:	08 c0       	rjmp	.+16     	; 0x3ac <TIM_GetStatus+0x9e>
 39c:	81 e0       	ldi	r24, 0x01	; 1
 39e:	fb 01       	movw	r30, r22
 3a0:	80 83       	st	Z, r24
 3a2:	88 b7       	in	r24, 0x38	; 56
 3a4:	80 61       	ori	r24, 0x10	; 16
 3a6:	88 bf       	out	0x38, r24	; 56
 3a8:	80 e0       	ldi	r24, 0x00	; 0
 3aa:	08 95       	ret
 3ac:	08 b6       	in	r0, 0x38	; 56
 3ae:	03 fe       	sbrs	r0, 3
 3b0:	35 c0       	rjmp	.+106    	; 0x41c <__EEPROM_REGION_LENGTH__+0x1c>
 3b2:	91 e0       	ldi	r25, 0x01	; 1
 3b4:	fb 01       	movw	r30, r22
 3b6:	90 83       	st	Z, r25
 3b8:	98 b7       	in	r25, 0x38	; 56
 3ba:	98 60       	ori	r25, 0x08	; 8
 3bc:	98 bf       	out	0x38, r25	; 56
 3be:	08 95       	ret
 3c0:	90 e0       	ldi	r25, 0x00	; 0
 3c2:	fc 01       	movw	r30, r24
 3c4:	ee 0f       	add	r30, r30
 3c6:	ff 1f       	adc	r31, r31
 3c8:	8e 0f       	add	r24, r30
 3ca:	9f 1f       	adc	r25, r31
 3cc:	fc 01       	movw	r30, r24
 3ce:	e0 5a       	subi	r30, 0xA0	; 160
 3d0:	ff 4f       	sbci	r31, 0xFF	; 255
 3d2:	80 81       	ld	r24, Z
 3d4:	81 11       	cpse	r24, r1
 3d6:	09 c0       	rjmp	.+18     	; 0x3ea <TIM_GetStatus+0xdc>
 3d8:	08 b6       	in	r0, 0x38	; 56
 3da:	06 fe       	sbrs	r0, 6
 3dc:	21 c0       	rjmp	.+66     	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
 3de:	fb 01       	movw	r30, r22
 3e0:	10 82       	st	Z, r1
 3e2:	98 b7       	in	r25, 0x38	; 56
 3e4:	90 64       	ori	r25, 0x40	; 64
 3e6:	98 bf       	out	0x38, r25	; 56
 3e8:	08 95       	ret
 3ea:	88 30       	cpi	r24, 0x08	; 8
 3ec:	d9 f4       	brne	.+54     	; 0x424 <__EEPROM_REGION_LENGTH__+0x24>
 3ee:	08 b6       	in	r0, 0x38	; 56
 3f0:	07 fe       	sbrs	r0, 7
 3f2:	1a c0       	rjmp	.+52     	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
 3f4:	81 e0       	ldi	r24, 0x01	; 1
 3f6:	fb 01       	movw	r30, r22
 3f8:	80 83       	st	Z, r24
 3fa:	88 b7       	in	r24, 0x38	; 56
 3fc:	80 68       	ori	r24, 0x80	; 128
 3fe:	88 bf       	out	0x38, r24	; 56
 400:	80 e0       	ldi	r24, 0x00	; 0
 402:	08 95       	ret
 404:	8e ef       	ldi	r24, 0xFE	; 254
 406:	08 95       	ret
 408:	8d ef       	ldi	r24, 0xFD	; 253
 40a:	08 95       	ret
 40c:	80 e0       	ldi	r24, 0x00	; 0
 40e:	08 95       	ret
 410:	8d ef       	ldi	r24, 0xFD	; 253
 412:	08 95       	ret
 414:	8d ef       	ldi	r24, 0xFD	; 253
 416:	08 95       	ret
 418:	80 e0       	ldi	r24, 0x00	; 0
 41a:	08 95       	ret
 41c:	8d ef       	ldi	r24, 0xFD	; 253
 41e:	08 95       	ret
 420:	8d ef       	ldi	r24, 0xFD	; 253
 422:	08 95       	ret
 424:	80 e0       	ldi	r24, 0x00	; 0
 426:	08 95       	ret
 428:	8d ef       	ldi	r24, 0xFD	; 253
 42a:	08 95       	ret

0000042c <TIM_DelayMs>:

TIMER_ERROR_state_t TIM_DelayMs(TIM_CH_t TIM_channel, TIM_Delay_t TIM_Delay)
{
 42c:	8f 92       	push	r8
 42e:	9f 92       	push	r9
 430:	af 92       	push	r10
 432:	bf 92       	push	r11
 434:	cf 92       	push	r12
 436:	df 92       	push	r13
 438:	ef 92       	push	r14
 43a:	ff 92       	push	r15
 43c:	1f 93       	push	r17
 43e:	cf 93       	push	r28
 440:	df 93       	push	r29
 442:	00 d0       	rcall	.+0      	; 0x444 <TIM_DelayMs+0x18>
 444:	00 d0       	rcall	.+0      	; 0x446 <TIM_DelayMs+0x1a>
 446:	cd b7       	in	r28, 0x3d	; 61
 448:	de b7       	in	r29, 0x3e	; 62
   /* Make sure not invalid timer channel */
   if(TIM_channel >= INVALID_TIMER_CH)
 44a:	83 30       	cpi	r24, 0x03	; 3
 44c:	08 f0       	brcs	.+2      	; 0x450 <TIM_DelayMs+0x24>
 44e:	b1 c0       	rjmp	.+354    	; 0x5b2 <TIM_DelayMs+0x186>
 450:	6a 01       	movw	r12, r20
 452:	7b 01       	movw	r14, r22
 454:	18 2f       	mov	r17, r24
   static uint8_t u8_OverflowsComplete = LOW;
   static uint8_t u8_Remindar = 0;
   static Enu_DelayStateMachine Enu_State = Ready;
   TIMER_ERROR_state_t Timer_state;
   
   if(Ready == Enu_State)
 456:	80 91 70 00 	lds	r24, 0x0070	; 0x800070 <Enu_State.1694>
 45a:	81 11       	cpse	r24, r1
 45c:	6c c0       	rjmp	.+216    	; 0x536 <TIM_DelayMs+0x10a>
   {
      /* Calculate how many overflows needed */
      
      float32_t f32_FreqRatio;
      Timer_state = GetFreqPrescaleRatio(TIM_channel, &f32_FreqRatio);
 45e:	be 01       	movw	r22, r28
 460:	6f 5f       	subi	r22, 0xFF	; 255
 462:	7f 4f       	sbci	r23, 0xFF	; 255
 464:	81 2f       	mov	r24, r17
 466:	0e 94 64 00 	call	0xc8	; 0xc8 <GetFreqPrescaleRatio>
      if(TIMER_E_UNSUPPORTED_PRESCALE == Timer_state)
 46a:	8c 3f       	cpi	r24, 0xFC	; 252
 46c:	09 f4       	brne	.+2      	; 0x470 <TIM_DelayMs+0x44>
 46e:	61 c0       	rjmp	.+194    	; 0x532 <TIM_DelayMs+0x106>
      {
         return TIMER_E_UNSUPPORTED_PRESCALE;
      }
      
      if(f32_FreqRatio > 1)
 470:	89 80       	ldd	r8, Y+1	; 0x01
 472:	9a 80       	ldd	r9, Y+2	; 0x02
 474:	ab 80       	ldd	r10, Y+3	; 0x03
 476:	bc 80       	ldd	r11, Y+4	; 0x04
 478:	20 e0       	ldi	r18, 0x00	; 0
 47a:	30 e0       	ldi	r19, 0x00	; 0
 47c:	40 e8       	ldi	r20, 0x80	; 128
 47e:	5f e3       	ldi	r21, 0x3F	; 63
 480:	c5 01       	movw	r24, r10
 482:	b4 01       	movw	r22, r8
 484:	0e 94 3d 04 	call	0x87a	; 0x87a <__gesf2>
 488:	18 16       	cp	r1, r24
 48a:	6c f4       	brge	.+26     	; 0x4a6 <TIM_DelayMs+0x7a>
      {
         TIM_Delay /= f32_FreqRatio;
 48c:	c7 01       	movw	r24, r14
 48e:	b6 01       	movw	r22, r12
 490:	0e 94 8b 03 	call	0x716	; 0x716 <__floatunsisf>
 494:	a5 01       	movw	r20, r10
 496:	94 01       	movw	r18, r8
 498:	0e 94 ea 02 	call	0x5d4	; 0x5d4 <__divsf3>
 49c:	0e 94 5c 03 	call	0x6b8	; 0x6b8 <__fixunssfsi>
 4a0:	e6 2f       	mov	r30, r22
 4a2:	37 2f       	mov	r19, r23
 4a4:	16 c0       	rjmp	.+44     	; 0x4d2 <TIM_DelayMs+0xa6>
      }
      else
      {
         TIM_Delay *= 1/f32_FreqRatio;
 4a6:	a5 01       	movw	r20, r10
 4a8:	94 01       	movw	r18, r8
 4aa:	60 e0       	ldi	r22, 0x00	; 0
 4ac:	70 e0       	ldi	r23, 0x00	; 0
 4ae:	80 e8       	ldi	r24, 0x80	; 128
 4b0:	9f e3       	ldi	r25, 0x3F	; 63
 4b2:	0e 94 ea 02 	call	0x5d4	; 0x5d4 <__divsf3>
 4b6:	4b 01       	movw	r8, r22
 4b8:	5c 01       	movw	r10, r24
 4ba:	c7 01       	movw	r24, r14
 4bc:	b6 01       	movw	r22, r12
 4be:	0e 94 8b 03 	call	0x716	; 0x716 <__floatunsisf>
 4c2:	a5 01       	movw	r20, r10
 4c4:	94 01       	movw	r18, r8
 4c6:	0e 94 42 04 	call	0x884	; 0x884 <__mulsf3>
 4ca:	0e 94 5c 03 	call	0x6b8	; 0x6b8 <__fixunssfsi>
 4ce:	e6 2f       	mov	r30, r22
 4d0:	37 2f       	mov	r19, r23
      }
      
      
      u32_Overflows = TIM_Delay*1000 / 256;
 4d2:	a8 ee       	ldi	r26, 0xE8	; 232
 4d4:	b3 e0       	ldi	r27, 0x03	; 3
 4d6:	2e 2f       	mov	r18, r30
 4d8:	48 2f       	mov	r20, r24
 4da:	59 2f       	mov	r21, r25
 4dc:	0e 94 b5 04 	call	0x96a	; 0x96a <__muluhisi3>
 4e0:	bb 27       	eor	r27, r27
 4e2:	a9 2f       	mov	r26, r25
 4e4:	98 2f       	mov	r25, r24
 4e6:	87 2f       	mov	r24, r23
 4e8:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <u32_Overflows.1691>
 4ec:	90 93 6d 00 	sts	0x006D, r25	; 0x80006d <u32_Overflows.1691+0x1>
 4f0:	a0 93 6e 00 	sts	0x006E, r26	; 0x80006e <u32_Overflows.1691+0x2>
 4f4:	b0 93 6f 00 	sts	0x006F, r27	; 0x80006f <u32_Overflows.1691+0x3>
      u8_Remindar = TIM_Delay*1000 % 256;
 4f8:	28 ee       	ldi	r18, 0xE8	; 232
 4fa:	e2 9f       	mul	r30, r18
 4fc:	e0 2d       	mov	r30, r0
 4fe:	11 24       	eor	r1, r1
 500:	e0 93 6b 00 	sts	0x006B, r30	; 0x80006b <u8_Remindar.1693>
      
      if(u32_Overflows == 0)
 504:	89 2b       	or	r24, r25
 506:	8a 2b       	or	r24, r26
 508:	8b 2b       	or	r24, r27
 50a:	49 f4       	brne	.+18     	; 0x51e <TIM_DelayMs+0xf2>
      {
         u8_OverflowsComplete = HIGH;
 50c:	81 e0       	ldi	r24, 0x01	; 1
 50e:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__data_end>
         TIM_Start(TIM_channel, u8_Remindar);
 512:	6e 2f       	mov	r22, r30
 514:	70 e0       	ldi	r23, 0x00	; 0
 516:	81 2f       	mov	r24, r17
 518:	0e 94 61 01 	call	0x2c2	; 0x2c2 <TIM_Start>
 51c:	05 c0       	rjmp	.+10     	; 0x528 <TIM_DelayMs+0xfc>
      }
      else
      {
         TIM_Start(TIM_channel, 255);
 51e:	6f ef       	ldi	r22, 0xFF	; 255
 520:	70 e0       	ldi	r23, 0x00	; 0
 522:	81 2f       	mov	r24, r17
 524:	0e 94 61 01 	call	0x2c2	; 0x2c2 <TIM_Start>
      }
      Enu_State = Pending;
 528:	81 e0       	ldi	r24, 0x01	; 1
 52a:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <Enu_State.1694>
      return TIMER_E_PENDING;
 52e:	8d ef       	ldi	r24, 0xFD	; 253
 530:	41 c0       	rjmp	.+130    	; 0x5b4 <TIM_DelayMs+0x188>
      
      float32_t f32_FreqRatio;
      Timer_state = GetFreqPrescaleRatio(TIM_channel, &f32_FreqRatio);
      if(TIMER_E_UNSUPPORTED_PRESCALE == Timer_state)
      {
         return TIMER_E_UNSUPPORTED_PRESCALE;
 532:	8c ef       	ldi	r24, 0xFC	; 252
 534:	3f c0       	rjmp	.+126    	; 0x5b4 <TIM_DelayMs+0x188>
         TIM_Start(TIM_channel, 255);
      }
      Enu_State = Pending;
      return TIMER_E_PENDING;
   }
   else if(Pending == Enu_State)
 536:	81 30       	cpi	r24, 0x01	; 1
 538:	d9 f5       	brne	.+118    	; 0x5b0 <TIM_DelayMs+0x184>
   {
      uint8_t u8_FlagState;
      Timer_state = TIM_GetStatus(TIM_channel, &u8_FlagState);
 53a:	be 01       	movw	r22, r28
 53c:	6f 5f       	subi	r22, 0xFF	; 255
 53e:	7f 4f       	sbci	r23, 0xFF	; 255
 540:	81 2f       	mov	r24, r17
 542:	0e 94 87 01 	call	0x30e	; 0x30e <TIM_GetStatus>
      if(Timer_state == TIMER_OVERFLOW_FLAG)
 546:	81 11       	cpse	r24, r1
 548:	33 c0       	rjmp	.+102    	; 0x5b0 <TIM_DelayMs+0x184>
      {
         if(u8_OverflowsComplete == HIGH)
 54a:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__data_end>
 54e:	81 30       	cpi	r24, 0x01	; 1
 550:	31 f4       	brne	.+12     	; 0x55e <TIM_DelayMs+0x132>
         {
            Enu_State = Ready;
 552:	10 92 70 00 	sts	0x0070, r1	; 0x800070 <Enu_State.1694>
            u8_OverflowsComplete = LOW;
 556:	10 92 6a 00 	sts	0x006A, r1	; 0x80006a <__data_end>
            return TIMER_E_SUCCESS;
 55a:	80 e0       	ldi	r24, 0x00	; 0
 55c:	2b c0       	rjmp	.+86     	; 0x5b4 <TIM_DelayMs+0x188>
         }
         
         u32_Overflows--;
 55e:	80 91 6c 00 	lds	r24, 0x006C	; 0x80006c <u32_Overflows.1691>
 562:	90 91 6d 00 	lds	r25, 0x006D	; 0x80006d <u32_Overflows.1691+0x1>
 566:	a0 91 6e 00 	lds	r26, 0x006E	; 0x80006e <u32_Overflows.1691+0x2>
 56a:	b0 91 6f 00 	lds	r27, 0x006F	; 0x80006f <u32_Overflows.1691+0x3>
 56e:	01 97       	sbiw	r24, 0x01	; 1
 570:	a1 09       	sbc	r26, r1
 572:	b1 09       	sbc	r27, r1
 574:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <u32_Overflows.1691>
 578:	90 93 6d 00 	sts	0x006D, r25	; 0x80006d <u32_Overflows.1691+0x1>
 57c:	a0 93 6e 00 	sts	0x006E, r26	; 0x80006e <u32_Overflows.1691+0x2>
 580:	b0 93 6f 00 	sts	0x006F, r27	; 0x80006f <u32_Overflows.1691+0x3>
         if(u32_Overflows == 0)
 584:	89 2b       	or	r24, r25
 586:	8a 2b       	or	r24, r26
 588:	8b 2b       	or	r24, r27
 58a:	59 f4       	brne	.+22     	; 0x5a2 <TIM_DelayMs+0x176>
         {
            u8_OverflowsComplete = HIGH;
 58c:	81 e0       	ldi	r24, 0x01	; 1
 58e:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__data_end>
            TIM_Start(TIM_channel, u8_Remindar);
 592:	60 91 6b 00 	lds	r22, 0x006B	; 0x80006b <u8_Remindar.1693>
 596:	70 e0       	ldi	r23, 0x00	; 0
 598:	81 2f       	mov	r24, r17
 59a:	0e 94 61 01 	call	0x2c2	; 0x2c2 <TIM_Start>
         else
         {
            TIM_Start(TIM_channel, 255);
         }
         
         return TIMER_E_PENDING;
 59e:	8d ef       	ldi	r24, 0xFD	; 253
 5a0:	09 c0       	rjmp	.+18     	; 0x5b4 <TIM_DelayMs+0x188>
            u8_OverflowsComplete = HIGH;
            TIM_Start(TIM_channel, u8_Remindar);
         }
         else
         {
            TIM_Start(TIM_channel, 255);
 5a2:	6f ef       	ldi	r22, 0xFF	; 255
 5a4:	70 e0       	ldi	r23, 0x00	; 0
 5a6:	81 2f       	mov	r24, r17
 5a8:	0e 94 61 01 	call	0x2c2	; 0x2c2 <TIM_Start>
         }
         
         return TIMER_E_PENDING;
 5ac:	8d ef       	ldi	r24, 0xFD	; 253
 5ae:	02 c0       	rjmp	.+4      	; 0x5b4 <TIM_DelayMs+0x188>
      }
   }
 5b0:	01 c0       	rjmp	.+2      	; 0x5b4 <TIM_DelayMs+0x188>
TIMER_ERROR_state_t TIM_DelayMs(TIM_CH_t TIM_channel, TIM_Delay_t TIM_Delay)
{
   /* Make sure not invalid timer channel */
   if(TIM_channel >= INVALID_TIMER_CH)
   {
      return TIMER_E_INVALID_CH_NUM;
 5b2:	8e ef       	ldi	r24, 0xFE	; 254
         }
         
         return TIMER_E_PENDING;
      }
   }
 5b4:	0f 90       	pop	r0
 5b6:	0f 90       	pop	r0
 5b8:	0f 90       	pop	r0
 5ba:	0f 90       	pop	r0
 5bc:	df 91       	pop	r29
 5be:	cf 91       	pop	r28
 5c0:	1f 91       	pop	r17
 5c2:	ff 90       	pop	r15
 5c4:	ef 90       	pop	r14
 5c6:	df 90       	pop	r13
 5c8:	cf 90       	pop	r12
 5ca:	bf 90       	pop	r11
 5cc:	af 90       	pop	r10
 5ce:	9f 90       	pop	r9
 5d0:	8f 90       	pop	r8
 5d2:	08 95       	ret

000005d4 <__divsf3>:
 5d4:	0e 94 fe 02 	call	0x5fc	; 0x5fc <__divsf3x>
 5d8:	0c 94 03 04 	jmp	0x806	; 0x806 <__fp_round>
 5dc:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <__fp_pscB>
 5e0:	58 f0       	brcs	.+22     	; 0x5f8 <__divsf3+0x24>
 5e2:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__fp_pscA>
 5e6:	40 f0       	brcs	.+16     	; 0x5f8 <__divsf3+0x24>
 5e8:	29 f4       	brne	.+10     	; 0x5f4 <__divsf3+0x20>
 5ea:	5f 3f       	cpi	r21, 0xFF	; 255
 5ec:	29 f0       	breq	.+10     	; 0x5f8 <__divsf3+0x24>
 5ee:	0c 94 ec 03 	jmp	0x7d8	; 0x7d8 <__fp_inf>
 5f2:	51 11       	cpse	r21, r1
 5f4:	0c 94 37 04 	jmp	0x86e	; 0x86e <__fp_szero>
 5f8:	0c 94 f2 03 	jmp	0x7e4	; 0x7e4 <__fp_nan>

000005fc <__divsf3x>:
 5fc:	0e 94 14 04 	call	0x828	; 0x828 <__fp_split3>
 600:	68 f3       	brcs	.-38     	; 0x5dc <__divsf3+0x8>

00000602 <__divsf3_pse>:
 602:	99 23       	and	r25, r25
 604:	b1 f3       	breq	.-20     	; 0x5f2 <__divsf3+0x1e>
 606:	55 23       	and	r21, r21
 608:	91 f3       	breq	.-28     	; 0x5ee <__divsf3+0x1a>
 60a:	95 1b       	sub	r25, r21
 60c:	55 0b       	sbc	r21, r21
 60e:	bb 27       	eor	r27, r27
 610:	aa 27       	eor	r26, r26
 612:	62 17       	cp	r22, r18
 614:	73 07       	cpc	r23, r19
 616:	84 07       	cpc	r24, r20
 618:	38 f0       	brcs	.+14     	; 0x628 <__divsf3_pse+0x26>
 61a:	9f 5f       	subi	r25, 0xFF	; 255
 61c:	5f 4f       	sbci	r21, 0xFF	; 255
 61e:	22 0f       	add	r18, r18
 620:	33 1f       	adc	r19, r19
 622:	44 1f       	adc	r20, r20
 624:	aa 1f       	adc	r26, r26
 626:	a9 f3       	breq	.-22     	; 0x612 <__divsf3_pse+0x10>
 628:	35 d0       	rcall	.+106    	; 0x694 <__divsf3_pse+0x92>
 62a:	0e 2e       	mov	r0, r30
 62c:	3a f0       	brmi	.+14     	; 0x63c <__divsf3_pse+0x3a>
 62e:	e0 e8       	ldi	r30, 0x80	; 128
 630:	32 d0       	rcall	.+100    	; 0x696 <__divsf3_pse+0x94>
 632:	91 50       	subi	r25, 0x01	; 1
 634:	50 40       	sbci	r21, 0x00	; 0
 636:	e6 95       	lsr	r30
 638:	00 1c       	adc	r0, r0
 63a:	ca f7       	brpl	.-14     	; 0x62e <__divsf3_pse+0x2c>
 63c:	2b d0       	rcall	.+86     	; 0x694 <__divsf3_pse+0x92>
 63e:	fe 2f       	mov	r31, r30
 640:	29 d0       	rcall	.+82     	; 0x694 <__divsf3_pse+0x92>
 642:	66 0f       	add	r22, r22
 644:	77 1f       	adc	r23, r23
 646:	88 1f       	adc	r24, r24
 648:	bb 1f       	adc	r27, r27
 64a:	26 17       	cp	r18, r22
 64c:	37 07       	cpc	r19, r23
 64e:	48 07       	cpc	r20, r24
 650:	ab 07       	cpc	r26, r27
 652:	b0 e8       	ldi	r27, 0x80	; 128
 654:	09 f0       	breq	.+2      	; 0x658 <__divsf3_pse+0x56>
 656:	bb 0b       	sbc	r27, r27
 658:	80 2d       	mov	r24, r0
 65a:	bf 01       	movw	r22, r30
 65c:	ff 27       	eor	r31, r31
 65e:	93 58       	subi	r25, 0x83	; 131
 660:	5f 4f       	sbci	r21, 0xFF	; 255
 662:	3a f0       	brmi	.+14     	; 0x672 <__divsf3_pse+0x70>
 664:	9e 3f       	cpi	r25, 0xFE	; 254
 666:	51 05       	cpc	r21, r1
 668:	78 f0       	brcs	.+30     	; 0x688 <__divsf3_pse+0x86>
 66a:	0c 94 ec 03 	jmp	0x7d8	; 0x7d8 <__fp_inf>
 66e:	0c 94 37 04 	jmp	0x86e	; 0x86e <__fp_szero>
 672:	5f 3f       	cpi	r21, 0xFF	; 255
 674:	e4 f3       	brlt	.-8      	; 0x66e <__divsf3_pse+0x6c>
 676:	98 3e       	cpi	r25, 0xE8	; 232
 678:	d4 f3       	brlt	.-12     	; 0x66e <__divsf3_pse+0x6c>
 67a:	86 95       	lsr	r24
 67c:	77 95       	ror	r23
 67e:	67 95       	ror	r22
 680:	b7 95       	ror	r27
 682:	f7 95       	ror	r31
 684:	9f 5f       	subi	r25, 0xFF	; 255
 686:	c9 f7       	brne	.-14     	; 0x67a <__divsf3_pse+0x78>
 688:	88 0f       	add	r24, r24
 68a:	91 1d       	adc	r25, r1
 68c:	96 95       	lsr	r25
 68e:	87 95       	ror	r24
 690:	97 f9       	bld	r25, 7
 692:	08 95       	ret
 694:	e1 e0       	ldi	r30, 0x01	; 1
 696:	66 0f       	add	r22, r22
 698:	77 1f       	adc	r23, r23
 69a:	88 1f       	adc	r24, r24
 69c:	bb 1f       	adc	r27, r27
 69e:	62 17       	cp	r22, r18
 6a0:	73 07       	cpc	r23, r19
 6a2:	84 07       	cpc	r24, r20
 6a4:	ba 07       	cpc	r27, r26
 6a6:	20 f0       	brcs	.+8      	; 0x6b0 <__divsf3_pse+0xae>
 6a8:	62 1b       	sub	r22, r18
 6aa:	73 0b       	sbc	r23, r19
 6ac:	84 0b       	sbc	r24, r20
 6ae:	ba 0b       	sbc	r27, r26
 6b0:	ee 1f       	adc	r30, r30
 6b2:	88 f7       	brcc	.-30     	; 0x696 <__divsf3_pse+0x94>
 6b4:	e0 95       	com	r30
 6b6:	08 95       	ret

000006b8 <__fixunssfsi>:
 6b8:	0e 94 1c 04 	call	0x838	; 0x838 <__fp_splitA>
 6bc:	88 f0       	brcs	.+34     	; 0x6e0 <__fixunssfsi+0x28>
 6be:	9f 57       	subi	r25, 0x7F	; 127
 6c0:	98 f0       	brcs	.+38     	; 0x6e8 <__fixunssfsi+0x30>
 6c2:	b9 2f       	mov	r27, r25
 6c4:	99 27       	eor	r25, r25
 6c6:	b7 51       	subi	r27, 0x17	; 23
 6c8:	b0 f0       	brcs	.+44     	; 0x6f6 <__fixunssfsi+0x3e>
 6ca:	e1 f0       	breq	.+56     	; 0x704 <__fixunssfsi+0x4c>
 6cc:	66 0f       	add	r22, r22
 6ce:	77 1f       	adc	r23, r23
 6d0:	88 1f       	adc	r24, r24
 6d2:	99 1f       	adc	r25, r25
 6d4:	1a f0       	brmi	.+6      	; 0x6dc <__fixunssfsi+0x24>
 6d6:	ba 95       	dec	r27
 6d8:	c9 f7       	brne	.-14     	; 0x6cc <__fixunssfsi+0x14>
 6da:	14 c0       	rjmp	.+40     	; 0x704 <__fixunssfsi+0x4c>
 6dc:	b1 30       	cpi	r27, 0x01	; 1
 6de:	91 f0       	breq	.+36     	; 0x704 <__fixunssfsi+0x4c>
 6e0:	0e 94 36 04 	call	0x86c	; 0x86c <__fp_zero>
 6e4:	b1 e0       	ldi	r27, 0x01	; 1
 6e6:	08 95       	ret
 6e8:	0c 94 36 04 	jmp	0x86c	; 0x86c <__fp_zero>
 6ec:	67 2f       	mov	r22, r23
 6ee:	78 2f       	mov	r23, r24
 6f0:	88 27       	eor	r24, r24
 6f2:	b8 5f       	subi	r27, 0xF8	; 248
 6f4:	39 f0       	breq	.+14     	; 0x704 <__fixunssfsi+0x4c>
 6f6:	b9 3f       	cpi	r27, 0xF9	; 249
 6f8:	cc f3       	brlt	.-14     	; 0x6ec <__fixunssfsi+0x34>
 6fa:	86 95       	lsr	r24
 6fc:	77 95       	ror	r23
 6fe:	67 95       	ror	r22
 700:	b3 95       	inc	r27
 702:	d9 f7       	brne	.-10     	; 0x6fa <__fixunssfsi+0x42>
 704:	3e f4       	brtc	.+14     	; 0x714 <__fixunssfsi+0x5c>
 706:	90 95       	com	r25
 708:	80 95       	com	r24
 70a:	70 95       	com	r23
 70c:	61 95       	neg	r22
 70e:	7f 4f       	sbci	r23, 0xFF	; 255
 710:	8f 4f       	sbci	r24, 0xFF	; 255
 712:	9f 4f       	sbci	r25, 0xFF	; 255
 714:	08 95       	ret

00000716 <__floatunsisf>:
 716:	e8 94       	clt
 718:	09 c0       	rjmp	.+18     	; 0x72c <__floatsisf+0x12>

0000071a <__floatsisf>:
 71a:	97 fb       	bst	r25, 7
 71c:	3e f4       	brtc	.+14     	; 0x72c <__floatsisf+0x12>
 71e:	90 95       	com	r25
 720:	80 95       	com	r24
 722:	70 95       	com	r23
 724:	61 95       	neg	r22
 726:	7f 4f       	sbci	r23, 0xFF	; 255
 728:	8f 4f       	sbci	r24, 0xFF	; 255
 72a:	9f 4f       	sbci	r25, 0xFF	; 255
 72c:	99 23       	and	r25, r25
 72e:	a9 f0       	breq	.+42     	; 0x75a <__floatsisf+0x40>
 730:	f9 2f       	mov	r31, r25
 732:	96 e9       	ldi	r25, 0x96	; 150
 734:	bb 27       	eor	r27, r27
 736:	93 95       	inc	r25
 738:	f6 95       	lsr	r31
 73a:	87 95       	ror	r24
 73c:	77 95       	ror	r23
 73e:	67 95       	ror	r22
 740:	b7 95       	ror	r27
 742:	f1 11       	cpse	r31, r1
 744:	f8 cf       	rjmp	.-16     	; 0x736 <__floatsisf+0x1c>
 746:	fa f4       	brpl	.+62     	; 0x786 <__floatsisf+0x6c>
 748:	bb 0f       	add	r27, r27
 74a:	11 f4       	brne	.+4      	; 0x750 <__floatsisf+0x36>
 74c:	60 ff       	sbrs	r22, 0
 74e:	1b c0       	rjmp	.+54     	; 0x786 <__floatsisf+0x6c>
 750:	6f 5f       	subi	r22, 0xFF	; 255
 752:	7f 4f       	sbci	r23, 0xFF	; 255
 754:	8f 4f       	sbci	r24, 0xFF	; 255
 756:	9f 4f       	sbci	r25, 0xFF	; 255
 758:	16 c0       	rjmp	.+44     	; 0x786 <__floatsisf+0x6c>
 75a:	88 23       	and	r24, r24
 75c:	11 f0       	breq	.+4      	; 0x762 <__floatsisf+0x48>
 75e:	96 e9       	ldi	r25, 0x96	; 150
 760:	11 c0       	rjmp	.+34     	; 0x784 <__floatsisf+0x6a>
 762:	77 23       	and	r23, r23
 764:	21 f0       	breq	.+8      	; 0x76e <__floatsisf+0x54>
 766:	9e e8       	ldi	r25, 0x8E	; 142
 768:	87 2f       	mov	r24, r23
 76a:	76 2f       	mov	r23, r22
 76c:	05 c0       	rjmp	.+10     	; 0x778 <__floatsisf+0x5e>
 76e:	66 23       	and	r22, r22
 770:	71 f0       	breq	.+28     	; 0x78e <__floatsisf+0x74>
 772:	96 e8       	ldi	r25, 0x86	; 134
 774:	86 2f       	mov	r24, r22
 776:	70 e0       	ldi	r23, 0x00	; 0
 778:	60 e0       	ldi	r22, 0x00	; 0
 77a:	2a f0       	brmi	.+10     	; 0x786 <__floatsisf+0x6c>
 77c:	9a 95       	dec	r25
 77e:	66 0f       	add	r22, r22
 780:	77 1f       	adc	r23, r23
 782:	88 1f       	adc	r24, r24
 784:	da f7       	brpl	.-10     	; 0x77c <__floatsisf+0x62>
 786:	88 0f       	add	r24, r24
 788:	96 95       	lsr	r25
 78a:	87 95       	ror	r24
 78c:	97 f9       	bld	r25, 7
 78e:	08 95       	ret

00000790 <__fp_cmp>:
 790:	99 0f       	add	r25, r25
 792:	00 08       	sbc	r0, r0
 794:	55 0f       	add	r21, r21
 796:	aa 0b       	sbc	r26, r26
 798:	e0 e8       	ldi	r30, 0x80	; 128
 79a:	fe ef       	ldi	r31, 0xFE	; 254
 79c:	16 16       	cp	r1, r22
 79e:	17 06       	cpc	r1, r23
 7a0:	e8 07       	cpc	r30, r24
 7a2:	f9 07       	cpc	r31, r25
 7a4:	c0 f0       	brcs	.+48     	; 0x7d6 <__fp_cmp+0x46>
 7a6:	12 16       	cp	r1, r18
 7a8:	13 06       	cpc	r1, r19
 7aa:	e4 07       	cpc	r30, r20
 7ac:	f5 07       	cpc	r31, r21
 7ae:	98 f0       	brcs	.+38     	; 0x7d6 <__fp_cmp+0x46>
 7b0:	62 1b       	sub	r22, r18
 7b2:	73 0b       	sbc	r23, r19
 7b4:	84 0b       	sbc	r24, r20
 7b6:	95 0b       	sbc	r25, r21
 7b8:	39 f4       	brne	.+14     	; 0x7c8 <__fp_cmp+0x38>
 7ba:	0a 26       	eor	r0, r26
 7bc:	61 f0       	breq	.+24     	; 0x7d6 <__fp_cmp+0x46>
 7be:	23 2b       	or	r18, r19
 7c0:	24 2b       	or	r18, r20
 7c2:	25 2b       	or	r18, r21
 7c4:	21 f4       	brne	.+8      	; 0x7ce <__fp_cmp+0x3e>
 7c6:	08 95       	ret
 7c8:	0a 26       	eor	r0, r26
 7ca:	09 f4       	brne	.+2      	; 0x7ce <__fp_cmp+0x3e>
 7cc:	a1 40       	sbci	r26, 0x01	; 1
 7ce:	a6 95       	lsr	r26
 7d0:	8f ef       	ldi	r24, 0xFF	; 255
 7d2:	81 1d       	adc	r24, r1
 7d4:	81 1d       	adc	r24, r1
 7d6:	08 95       	ret

000007d8 <__fp_inf>:
 7d8:	97 f9       	bld	r25, 7
 7da:	9f 67       	ori	r25, 0x7F	; 127
 7dc:	80 e8       	ldi	r24, 0x80	; 128
 7de:	70 e0       	ldi	r23, 0x00	; 0
 7e0:	60 e0       	ldi	r22, 0x00	; 0
 7e2:	08 95       	ret

000007e4 <__fp_nan>:
 7e4:	9f ef       	ldi	r25, 0xFF	; 255
 7e6:	80 ec       	ldi	r24, 0xC0	; 192
 7e8:	08 95       	ret

000007ea <__fp_pscA>:
 7ea:	00 24       	eor	r0, r0
 7ec:	0a 94       	dec	r0
 7ee:	16 16       	cp	r1, r22
 7f0:	17 06       	cpc	r1, r23
 7f2:	18 06       	cpc	r1, r24
 7f4:	09 06       	cpc	r0, r25
 7f6:	08 95       	ret

000007f8 <__fp_pscB>:
 7f8:	00 24       	eor	r0, r0
 7fa:	0a 94       	dec	r0
 7fc:	12 16       	cp	r1, r18
 7fe:	13 06       	cpc	r1, r19
 800:	14 06       	cpc	r1, r20
 802:	05 06       	cpc	r0, r21
 804:	08 95       	ret

00000806 <__fp_round>:
 806:	09 2e       	mov	r0, r25
 808:	03 94       	inc	r0
 80a:	00 0c       	add	r0, r0
 80c:	11 f4       	brne	.+4      	; 0x812 <__fp_round+0xc>
 80e:	88 23       	and	r24, r24
 810:	52 f0       	brmi	.+20     	; 0x826 <__fp_round+0x20>
 812:	bb 0f       	add	r27, r27
 814:	40 f4       	brcc	.+16     	; 0x826 <__fp_round+0x20>
 816:	bf 2b       	or	r27, r31
 818:	11 f4       	brne	.+4      	; 0x81e <__fp_round+0x18>
 81a:	60 ff       	sbrs	r22, 0
 81c:	04 c0       	rjmp	.+8      	; 0x826 <__fp_round+0x20>
 81e:	6f 5f       	subi	r22, 0xFF	; 255
 820:	7f 4f       	sbci	r23, 0xFF	; 255
 822:	8f 4f       	sbci	r24, 0xFF	; 255
 824:	9f 4f       	sbci	r25, 0xFF	; 255
 826:	08 95       	ret

00000828 <__fp_split3>:
 828:	57 fd       	sbrc	r21, 7
 82a:	90 58       	subi	r25, 0x80	; 128
 82c:	44 0f       	add	r20, r20
 82e:	55 1f       	adc	r21, r21
 830:	59 f0       	breq	.+22     	; 0x848 <__fp_splitA+0x10>
 832:	5f 3f       	cpi	r21, 0xFF	; 255
 834:	71 f0       	breq	.+28     	; 0x852 <__fp_splitA+0x1a>
 836:	47 95       	ror	r20

00000838 <__fp_splitA>:
 838:	88 0f       	add	r24, r24
 83a:	97 fb       	bst	r25, 7
 83c:	99 1f       	adc	r25, r25
 83e:	61 f0       	breq	.+24     	; 0x858 <__fp_splitA+0x20>
 840:	9f 3f       	cpi	r25, 0xFF	; 255
 842:	79 f0       	breq	.+30     	; 0x862 <__stack+0x3>
 844:	87 95       	ror	r24
 846:	08 95       	ret
 848:	12 16       	cp	r1, r18
 84a:	13 06       	cpc	r1, r19
 84c:	14 06       	cpc	r1, r20
 84e:	55 1f       	adc	r21, r21
 850:	f2 cf       	rjmp	.-28     	; 0x836 <__fp_split3+0xe>
 852:	46 95       	lsr	r20
 854:	f1 df       	rcall	.-30     	; 0x838 <__fp_splitA>
 856:	08 c0       	rjmp	.+16     	; 0x868 <__stack+0x9>
 858:	16 16       	cp	r1, r22
 85a:	17 06       	cpc	r1, r23
 85c:	18 06       	cpc	r1, r24
 85e:	99 1f       	adc	r25, r25
 860:	f1 cf       	rjmp	.-30     	; 0x844 <__fp_splitA+0xc>
 862:	86 95       	lsr	r24
 864:	71 05       	cpc	r23, r1
 866:	61 05       	cpc	r22, r1
 868:	08 94       	sec
 86a:	08 95       	ret

0000086c <__fp_zero>:
 86c:	e8 94       	clt

0000086e <__fp_szero>:
 86e:	bb 27       	eor	r27, r27
 870:	66 27       	eor	r22, r22
 872:	77 27       	eor	r23, r23
 874:	cb 01       	movw	r24, r22
 876:	97 f9       	bld	r25, 7
 878:	08 95       	ret

0000087a <__gesf2>:
 87a:	0e 94 c8 03 	call	0x790	; 0x790 <__fp_cmp>
 87e:	08 f4       	brcc	.+2      	; 0x882 <__gesf2+0x8>
 880:	8f ef       	ldi	r24, 0xFF	; 255
 882:	08 95       	ret

00000884 <__mulsf3>:
 884:	0e 94 55 04 	call	0x8aa	; 0x8aa <__mulsf3x>
 888:	0c 94 03 04 	jmp	0x806	; 0x806 <__fp_round>
 88c:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__fp_pscA>
 890:	38 f0       	brcs	.+14     	; 0x8a0 <__mulsf3+0x1c>
 892:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <__fp_pscB>
 896:	20 f0       	brcs	.+8      	; 0x8a0 <__mulsf3+0x1c>
 898:	95 23       	and	r25, r21
 89a:	11 f0       	breq	.+4      	; 0x8a0 <__mulsf3+0x1c>
 89c:	0c 94 ec 03 	jmp	0x7d8	; 0x7d8 <__fp_inf>
 8a0:	0c 94 f2 03 	jmp	0x7e4	; 0x7e4 <__fp_nan>
 8a4:	11 24       	eor	r1, r1
 8a6:	0c 94 37 04 	jmp	0x86e	; 0x86e <__fp_szero>

000008aa <__mulsf3x>:
 8aa:	0e 94 14 04 	call	0x828	; 0x828 <__fp_split3>
 8ae:	70 f3       	brcs	.-36     	; 0x88c <__mulsf3+0x8>

000008b0 <__mulsf3_pse>:
 8b0:	95 9f       	mul	r25, r21
 8b2:	c1 f3       	breq	.-16     	; 0x8a4 <__mulsf3+0x20>
 8b4:	95 0f       	add	r25, r21
 8b6:	50 e0       	ldi	r21, 0x00	; 0
 8b8:	55 1f       	adc	r21, r21
 8ba:	62 9f       	mul	r22, r18
 8bc:	f0 01       	movw	r30, r0
 8be:	72 9f       	mul	r23, r18
 8c0:	bb 27       	eor	r27, r27
 8c2:	f0 0d       	add	r31, r0
 8c4:	b1 1d       	adc	r27, r1
 8c6:	63 9f       	mul	r22, r19
 8c8:	aa 27       	eor	r26, r26
 8ca:	f0 0d       	add	r31, r0
 8cc:	b1 1d       	adc	r27, r1
 8ce:	aa 1f       	adc	r26, r26
 8d0:	64 9f       	mul	r22, r20
 8d2:	66 27       	eor	r22, r22
 8d4:	b0 0d       	add	r27, r0
 8d6:	a1 1d       	adc	r26, r1
 8d8:	66 1f       	adc	r22, r22
 8da:	82 9f       	mul	r24, r18
 8dc:	22 27       	eor	r18, r18
 8de:	b0 0d       	add	r27, r0
 8e0:	a1 1d       	adc	r26, r1
 8e2:	62 1f       	adc	r22, r18
 8e4:	73 9f       	mul	r23, r19
 8e6:	b0 0d       	add	r27, r0
 8e8:	a1 1d       	adc	r26, r1
 8ea:	62 1f       	adc	r22, r18
 8ec:	83 9f       	mul	r24, r19
 8ee:	a0 0d       	add	r26, r0
 8f0:	61 1d       	adc	r22, r1
 8f2:	22 1f       	adc	r18, r18
 8f4:	74 9f       	mul	r23, r20
 8f6:	33 27       	eor	r19, r19
 8f8:	a0 0d       	add	r26, r0
 8fa:	61 1d       	adc	r22, r1
 8fc:	23 1f       	adc	r18, r19
 8fe:	84 9f       	mul	r24, r20
 900:	60 0d       	add	r22, r0
 902:	21 1d       	adc	r18, r1
 904:	82 2f       	mov	r24, r18
 906:	76 2f       	mov	r23, r22
 908:	6a 2f       	mov	r22, r26
 90a:	11 24       	eor	r1, r1
 90c:	9f 57       	subi	r25, 0x7F	; 127
 90e:	50 40       	sbci	r21, 0x00	; 0
 910:	9a f0       	brmi	.+38     	; 0x938 <__mulsf3_pse+0x88>
 912:	f1 f0       	breq	.+60     	; 0x950 <__mulsf3_pse+0xa0>
 914:	88 23       	and	r24, r24
 916:	4a f0       	brmi	.+18     	; 0x92a <__mulsf3_pse+0x7a>
 918:	ee 0f       	add	r30, r30
 91a:	ff 1f       	adc	r31, r31
 91c:	bb 1f       	adc	r27, r27
 91e:	66 1f       	adc	r22, r22
 920:	77 1f       	adc	r23, r23
 922:	88 1f       	adc	r24, r24
 924:	91 50       	subi	r25, 0x01	; 1
 926:	50 40       	sbci	r21, 0x00	; 0
 928:	a9 f7       	brne	.-22     	; 0x914 <__mulsf3_pse+0x64>
 92a:	9e 3f       	cpi	r25, 0xFE	; 254
 92c:	51 05       	cpc	r21, r1
 92e:	80 f0       	brcs	.+32     	; 0x950 <__mulsf3_pse+0xa0>
 930:	0c 94 ec 03 	jmp	0x7d8	; 0x7d8 <__fp_inf>
 934:	0c 94 37 04 	jmp	0x86e	; 0x86e <__fp_szero>
 938:	5f 3f       	cpi	r21, 0xFF	; 255
 93a:	e4 f3       	brlt	.-8      	; 0x934 <__mulsf3_pse+0x84>
 93c:	98 3e       	cpi	r25, 0xE8	; 232
 93e:	d4 f3       	brlt	.-12     	; 0x934 <__mulsf3_pse+0x84>
 940:	86 95       	lsr	r24
 942:	77 95       	ror	r23
 944:	67 95       	ror	r22
 946:	b7 95       	ror	r27
 948:	f7 95       	ror	r31
 94a:	e7 95       	ror	r30
 94c:	9f 5f       	subi	r25, 0xFF	; 255
 94e:	c1 f7       	brne	.-16     	; 0x940 <__mulsf3_pse+0x90>
 950:	fe 2b       	or	r31, r30
 952:	88 0f       	add	r24, r24
 954:	91 1d       	adc	r25, r1
 956:	96 95       	lsr	r25
 958:	87 95       	ror	r24
 95a:	97 f9       	bld	r25, 7
 95c:	08 95       	ret

0000095e <__tablejump2__>:
 95e:	ee 0f       	add	r30, r30
 960:	ff 1f       	adc	r31, r31
 962:	05 90       	lpm	r0, Z+
 964:	f4 91       	lpm	r31, Z
 966:	e0 2d       	mov	r30, r0
 968:	09 94       	ijmp

0000096a <__muluhisi3>:
 96a:	0e 94 c0 04 	call	0x980	; 0x980 <__umulhisi3>
 96e:	a5 9f       	mul	r26, r21
 970:	90 0d       	add	r25, r0
 972:	b4 9f       	mul	r27, r20
 974:	90 0d       	add	r25, r0
 976:	a4 9f       	mul	r26, r20
 978:	80 0d       	add	r24, r0
 97a:	91 1d       	adc	r25, r1
 97c:	11 24       	eor	r1, r1
 97e:	08 95       	ret

00000980 <__umulhisi3>:
 980:	a2 9f       	mul	r26, r18
 982:	b0 01       	movw	r22, r0
 984:	b3 9f       	mul	r27, r19
 986:	c0 01       	movw	r24, r0
 988:	a3 9f       	mul	r26, r19
 98a:	70 0d       	add	r23, r0
 98c:	81 1d       	adc	r24, r1
 98e:	11 24       	eor	r1, r1
 990:	91 1d       	adc	r25, r1
 992:	b2 9f       	mul	r27, r18
 994:	70 0d       	add	r23, r0
 996:	81 1d       	adc	r24, r1
 998:	11 24       	eor	r1, r1
 99a:	91 1d       	adc	r25, r1
 99c:	08 95       	ret

0000099e <_exit>:
 99e:	f8 94       	cli

000009a0 <__stop_program>:
 9a0:	ff cf       	rjmp	.-2      	; 0x9a0 <__stop_program>
